************************************************
              RELATIONAL TRAINING
************************************************
Authors: Sean Hughes (sean.hughes@ugent.be) & Ian Hussey (ian.hussey@ugent.be)
Last updated: 29-09-2016

************* general variables ****************

<defaults>
/ screencolor = black
/ txcolor = white
/ font = ("Arial", -21, 700, 0, 34)
/ inputdevice = keyboard
/ validkeys = (" ", "t")
/ halign = center
/ Com1BaudRate = 9600
</defaults>

<expt>
/ blocks = [1 = block1]
</expt>

<variables>
/ group = (1 of 1) (block1 = Relational_Training_Phase_AB_Block_1)
</variables>

<values>
/ errors_in_block_counter = 0
</values>

<expressions>
/ n_errors_in_block = (values.errors_in_block_counter)
</expressions>

************** stimuli exemplars ***************

<item A1>
/ 1 = "PRU"
</item>

<item A2>
/ 1 = "VAZ"
</item>

<item B1>
/ 1 = "WIP"
</item>

<item B2>
/ 1 = "LOF"
</item>

***************** stimuli **********************

<text A1_target>
/ numitems = 1
/ items = A1
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A1_sample1>
/ numitems = 1
/ items = A1
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A1_sample2>
/ numitems = 1
/ items = A1
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1_target>
/ numitems = 1
/ items = B1
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1_sample1>
/ numitems = 1
/ items = B1
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1_sample2>
/ numitems = 1
/ items = B1
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2_target>
/ numitems = 1
/ items = A2
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2_sample1>
/ numitems = 1
/ items = A2
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2_sample2>
/ numitems = 1
/ items = A2
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2_target>
/ numitems = 1
/ items = B2
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2_sample1>
/ numitems = 1
/ items = B2
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2_sample2>
/ numitems = 1
/ items = B2
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

***************** labels etc *******************

<text continue>
/numitems = 1
/items= ("Press the spacebar to continue")
/ txcolor = white
/ txbgcolor = black
/ position = (50, 95)
/ font = ("Arial", -18, 700, 0, 49)
</text>

<text correctMessage>
/numitems = 1
/items= ("CORRECT")
/ txcolor = lightgreen
/ txbgcolor = black
/ position = (50, 50)
/ fontstyle = ("Arial", 5.00%, true, false, false, false)
</text>

<text errorMessage>
/numitems = 1
/items= ("WRONG")
/ txcolor = red
/ txbgcolor = black
/ position = (50, 50)
/ fontstyle = ("Arial", 5.00%, true, false, false, false)
</text>

<text blank>
/ font = ("Arial", -48, 700, 0, 34)
/ numitems = 1
/ txbgcolor = black
/ erase = false
/ items = ("                     ")
</text>

<text f_key>
/ numitems = 1
/ items = ("Press 'F' for")
/ txcolor = lightgreen
/ txbgcolor = black
/ position = (25, 58)
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text j_key>
/ numitems = 1
/ items = ("Press 'J' for")
/ txcolor = lightgreen
/ txbgcolor = black
/ position = (75, 58)
/ font = ("Arial", -50, 500, 0, 49)
</text>

******** Relational Training Phase *************

<trial A1_B1_B2> 
/ inputdevice = keyboard
/ correctresponse = ("f")
/ validresponse = ("f", "j")
/ responsemessage = ("f", correctMessage, 750)
/ responsemessage = ("j", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = B1_sample1, B2_sample2, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_B1_B2.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

<trial A1_B2_B1> 
/ inputdevice = keyboard
/ correctresponse = ("j")
/ validresponse = ("f", "j")
/ responsemessage = ("j", correctMessage, 750)
/ responsemessage = ("f", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = B1_sample2, B2_sample1, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_B2_B1.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

<trial A2_B2_B1> 
/ inputdevice = keyboard
/ correctresponse = ("f")
/ validresponse = ("f", "j")
/ responsemessage = ("f", correctMessage, 750)
/ responsemessage = ("j", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000= B2_sample1, B1_sample2, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_B2_B1.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

<trial A2_B1_B2> 
/ inputdevice = keyboard
/ correctresponse = ("j")
/ validresponse = ("f", "j")
/ responsemessage = ("j", correctMessage, 750)
/ responsemessage = ("f", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000 = B2_sample2, B1_sample1, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_B1_B2.error == true) values.errors_in_block_counter = values.errors_in_block_counter + 1]
</trial>

< trial exit>
/ trialcode = "exit"
/ stimulustimes = [ 1 = blank ]
/ trialduration = 1000
</trial>

*****************  block  **********************  

<block Relational_Training_Phase_AB_Block_1>
/ preinstructions = (RTP_instructions_1)
/ trials = [1-16 = noreplacenorepeat(A1_B1_B2, A1_B2_B1, A2_B2_B1, A2_B1_B2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AB_Block_2 else block.exit]
</block>

<block Relational_Training_Phase_AB_Block_2>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_B1_B2, A1_B2_B1, A2_B2_B1, A2_B1_B2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AB_Block_3 else block.exit]
</block>

<block Relational_Training_Phase_AB_Block_3>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_B1_B2, A1_B2_B1, A2_B2_B1, A2_B1_B2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AB_Block_4 else block.exit]
</block>

<block Relational_Training_Phase_AB_Block_4>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_B1_B2, A1_B2_B1, A2_B2_B1, A2_B1_B2)]
/ branch = [if (expressions.n_errors_in_block > 2 && currentblocknumber < 5) block.Relational_Training_Phase_AB_Block_5 else block.exit]
</block>

<block Relational_Training_Phase_AB_Block_5>
/ onblockbegin = [values.errors_in_block_counter = 0]
/ preinstructions = (RTP_instructions_2)
/ trials = [1-16 = noreplacenorepeat(A1_B1_B2, A1_B2_B1, A2_B2_B1, A2_B1_B2)]
</block>

<block exit>
/ trials = [1 = exit]
</block>

**************  instructions  ******************

<instruct>  
/ font = ("Arial", -20, 800, 0, 49)
/ inputdevice = keyboard
/ nextkey = (" ")
/ nextlabel = "Press the spacebar to continue"
/ prevlabel = "Press the 't' key to go back"
/ prevkey = ("t")
</instruct>

<page RTP_instructions_1>
^^The next task presents three nonsense words on each screen, one at the top and two on the bottom.
^^Your job is to figure out which word on the bottom of the screen goes with the word at the top. I.e., you have to figure out which words go together.
^^IMPORTANT: There is no 'shortcut' to knowing which nonsense words go together. The only way you can learn how one word is related to another is by using the feedback the task gives you.
^^Note: you will only move to the subsequent parts of the experiment once you have learned to respond very ACCURATELY.
</page>

<page RTP_instructions_2>
^^Well done. We will give you another opportunity to practice the same task.
^^Note: you will only move to the subsequent parts of the experiment once you have learned to respond very ACCURATELY.
</page>

************** Test monkey  ********************

<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 10
</monkey>