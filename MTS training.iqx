************************************************
               RELATIONAL TRAINING
************************************************
Author: Sean Hughes (sean.hughes@ugent.be)
Code review: Ian Hussey (ian.hussey@ugent.be)
Last updated: 6-09-2016

************* general variables ****************

<defaults>
/ screencolor = black
/ txcolor = white
/ font = ("Arial", -21, 700, 0, 34)
/ inputdevice = keyboard
/ validkeys = (" ", "t")
/ halign = center
/ Com1BaudRate = 9600
</defaults>

<expt>
/ blocks = [1 = block1]
</expt>

<variables>
/group = (1 of 1) (block1 = Relational_Training_Phase)
</variables>

<values>
/ errorcountlearninga = 0
</values>

<expressions>
/ randomWords = noreplace(1,2,3,4,5,6)
/ randomPosition1 = noreplace(25, 75)
/ randomPosition2 = noreplace(25, 75)
/ errorLa = (values.errorcountlearninga)
</expressions>

************** stimuli exemplars ***************

<item NeutralWords>
/ 1 = "A1"
/ 2 = "B1"
/ 3 = "C1"
/ 4 = "A2"
/ 5 = "B2"
/ 6 = "C2"
</item>

***************** demographics *****************

<textbox age>
/ caption = "What is your age:"
</textbox>

<textbox gender>
/ caption = "What is your gender"
</textbox>

<textbox ProlificCode>
/ caption = "Please enter your prolific ID here 
(if you cannot remember it please quit the experiment now and retrieve it before continuing)
Otherwise you cannot be paid"
/ position = (10%,30%)
/ textboxsize = (45, 40)
/ multiline = true
</textbox>

***************** stimuli **********************

<text A1>
/ numitems = 1
/ items = ("A1")
/ position = (50, 50)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A1_target>
/ numitems = 1
/ items = ("A1")
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A1_sample1>
/ numitems = 1
/ items = ("A1")
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A1_sample2>
/ numitems = 1
/ items = ("A1")
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1>
/ numitems = 1
/ items = ("B1")
/ position = (50, 50)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1_target>
/ numitems = 1
/ items = ("B1")
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1_sample1>
/ numitems = 1
/ items = ("B1")
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B1_sample2>
/ numitems = 1
/ items = ("B1")
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C1>
/ numitems = 1
/ items = ("C1")
/ position = (50, 50)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C1_target>
/ numitems = 1
/ items = ("C1")
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C1_sample1>
/ numitems = 1
/ items = ("C1")
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C1_sample2>
/ numitems = 1
/ items = ("C1")
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2>
/ numitems = 1
/ items = ("A2")
/ position = (50, 50)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2_target>
/ numitems = 1
/ items = ("A2")
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2_sample1>
/ numitems = 1
/ items = ("A2")
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text A2_sample2>
/ numitems = 1
/ items = ("A2")
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2>
/ numitems = 1
/ items = ("B2")
/ position = (50, 50)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2_target>
/ numitems = 1
/ items = ("B2")
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2_sample1>
/ numitems = 1
/ items = ("B2")
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text B2_sample2>
/ numitems = 1
/ items = ("B2")
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C2>
/ numitems = 1
/ items = ("C2")
/ position = (50, 50)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C2_target>
/ numitems = 1
/ items = ("C2")
/ position = (50, 30)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C2_sample1>
/ numitems = 1
/ items = ("C2")
/ position = (25, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text C2_sample2>
/ numitems = 1
/ items = ("C2")
/ position = (75, 70)
/ txcolor = white
/ txbgcolor = black
/ font = ("Arial", -50, 500, 0, 49)
</text>

<picture erasebig>
/ erase = false 
/ numitems = 1
/ items = ("erasebig.jpg")
</picture>

<picture erasesmall>
/ erase = false 
/ numitems = 1
/ items = ("erasesmall.jpg")
</picture>

***************** labels etc *******************

<text continue>
/numitems =1
/items= ("Press the spacebar to continue")
/ txcolor = white
/ txbgcolor = black
/ position = (50, 95)
/ font = ("Arial", -18, 700, 0, 49)
</text>

<text correctMessage>
/numitems =1
/items= ("CORRECT")
/ txcolor = green
/ txbgcolor = black
/ position = (50, 50)
/ fontstyle = ("Arial", 5.00%, true, false, false, false)
</text>

<text errorMessage>
/numitems = 1
/items= ("WRONG")
/ txcolor = red
/ txbgcolor = black
/ position = (50, 50)
/ fontstyle = ("Arial", 5.00%, true, false, false, false)
</text>

<text blank>
/ font = ("Arial", -48, 700, 0, 34)
/ numitems = 1
/ txbgcolor = black
/ erase = false
/ items = ("                     ")
</text>

<text f_key>
/ numitems = 1
/ items = ("Press 'F' for")
/ txcolor = white
/ txbgcolor = black
/ position = (25, 58)
/ font = ("Arial", -50, 500, 0, 49)
</text>

<text j_key>
/ numitems = 1
/ items = ("Press 'J' for")
/ txcolor = white
/ txbgcolor = black
/ position = (75, 58)
/ font = ("Arial", -50, 500, 0, 49)
</text>

******** Relational Training Phase *************

<trial A1_B1_B2> 
/ inputdevice = keyboard
/ correctresponse = ("f")
/ validresponse = ("f", "j")
/ responsemessage = ("f", correctMessage, 750)
/ responsemessage = ("j", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = B1_sample1, B2_sample2, f_key, j_key]
/ pretrialpause = 1000
/ ontrialend = [if (trial.A1_B1_B2.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A1_B2_B1> 
/ inputdevice = keyboard
/ correctresponse = ("j")
/ validresponse = ("f", "j")
/ responsemessage = ("j", correctMessage, 1000)
/ responsemessage = ("f", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = B1_sample2, B2_sample1, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_B2_B1.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A1_C1_C2> 
/ inputdevice = keyboard
/ correctresponse = ("f")
/ validresponse = ("f", "j")
/ responsemessage = ("f", correctMessage, 1000)
/ responsemessage = ("j", errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = C1_sample1, C2_sample2, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_C1_C2.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A1_C2_C1> 
/ inputdevice = keyboard
/ correctresponse = ("j")
/ validresponse = ("f", "j")
/ responsemessage = ("j", correctMessage, 1000)
/ responsemessage = (32, errorMessage, 1500)
/ stimulustimes = [500 = A1_target; 1000 = C1_sample2, C2_sample1, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A1_C2_C1.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A2_B2_B1> 
/ inputdevice = keyboard
/ correctresponse = ("f")
/ validresponse = ("f", "j")
/ responsemessage = ("f", correctMessage, 1000)
/ responsemessage = ("j", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000= B2_sample1, B1_sample2, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_B2_B1.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A2_B1_B2> 
/ inputdevice = keyboard
/ correctresponse = ("j")
/ validresponse = ("f", "j")
/ responsemessage = ("j", correctMessage, 1000)
/ responsemessage = ("f", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000 = B2_sample2, B1_sample1, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_B1_B2.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A2_C1_C2> 
/ inputdevice = keyboard
/ correctresponse = ("j")
/ validresponse = ("f", "j")
/ responsemessage = ("j", correctMessage, 1000)
/ responsemessage = ("f", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000 = C1_sample1, C2_sample2, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_C1_C2.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

<trial A2_C2_C1> 
/ inputdevice = keyboard
/ correctresponse = ("f")
/ validresponse = ("f", "j")
/ responsemessage = ("f", correctMessage, 1000)
/ responsemessage = ("j", errorMessage, 1500)
/ stimulustimes = [500 = A2_target; 1000 = C1_sample2, C2_sample1, f_key, j_key]
/ pretrialpause = 500
/ ontrialend = [if (trial.A2_C2_C1.error == true) values.errorcountlearninga = values.errorcountlearninga + 1]
</trial>

< trial pause>
/ trialcode = "pause"
/ stimulustimes = [ 1 = erasebig ]
/ trialduration = 1000
</trial>

< trial exit>
/ trialcode = "exit"
/ stimulustimes = [ 1 = erasesmall ]
/ trialduration = 1000
</trial>

*****************  block  **********************

<block Relational_Training_Phase>
/ preinstructions = (RTP_instructions)
/ trials = [1-40 = noreplace(A1_B1_B2, A1_B2_B1, A1_C1_C2, A1_C2_C1, A2_B2_B1, A2_B1_B2, A2_C1_C2, A2_C2_C1)]
/ onblockend = [block.Relational_Training_Phase.currentblocknumber == block.Relational_Training_Phase.currentblocknumber + 1]
/ branch = [if (expressions.errorLa > 4 && block.Relational_Training_Phase.currentblocknumber < 10) block.end else block.exit]
</block>

<block end>
/ onblockbegin = [values.errorcountlearninga = 0]
/ preinstructions = (RTP_post_instructions)
/ branch = [if (block.Relational_Training_Phase.currentblocknumber < 9) block.Relational_Training_Phase]
</block>

<block exit>
/ trials = [1 = exit]
</block>

**************  instructions  ******************

<instruct>  
/ font = ("Arial", -20, 800, 0, 49)
/ inputdevice = keyboard
/ nextkey = (" ")
/ nextlabel = "Press the spacebar to continue"
/ prevlabel = "Press the 't' key to go back"
/ prevkey = ("t")
</instruct>

<page RTP_instructions>
In the next part of the task please look at the word at the top of the screen and then at the two words at the bottom.^^ 

Please select one of the two words at the bottom of the screen using the 'f' or 'j' keys.^^

Specifically, press the 'f' key if you want to choose the word on the lower left. Press the 'j' key if you want to choose
the word on the lower right.^^

The computer will help you learn by telling you when you are correct or incorrect.^^

Please try to be as accurate as possible.^^
</page>

<page RTP_post_instructions>
Thank you. You will be given another opportunity to practice this part of the task.^^

Please take your time and try to be as ACCURATE as possible.^^

When you are ready press the spacebar to continue.^^
</page>